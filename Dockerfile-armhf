FROM ubuntu:20.04

# Avoid interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install required packages including armhf cross-compilation tools
RUN dpkg --add-architecture armhf && \
    apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    pkg-config \
    curl \
    unzip \
    python3 \
    python3-pip \
    crossbuild-essential-armhf \
    pkg-config-arm-linux-gnueabihf \
    libgtk-3-dev:armhf \
    libcurl4-openssl-dev:armhf \
    libjsoncpp-dev:armhf \
    libgtkmm-3.0-dev:armhf \
    libcurlpp-dev:armhf \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy source files
COPY src/ /app/src/
COPY include/ /app/include/
COPY resources/ /app/resources/
COPY CMakeLists.txt /app/

# Create a toolchain file for cross-compilation
RUN echo "set(CMAKE_SYSTEM_NAME Linux)" > /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_SYSTEM_PROCESSOR arm)" >> /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_C_COMPILER arm-linux-gnueabihf-gcc)" >> /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_CXX_COMPILER arm-linux-gnueabihf-g++)" >> /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_FIND_ROOT_PATH /usr/arm-linux-gnueabihf)" >> /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)" >> /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)" >> /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)" >> /app/armhf-toolchain.cmake && \
    echo "set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)" >> /app/armhf-toolchain.cmake

# Configure and build with armhf toolchain
RUN mkdir -p build && \
    cd build && \
    cmake .. -DCMAKE_TOOLCHAIN_FILE=/app/armhf-toolchain.cmake \
             -DCMAKE_BUILD_TYPE=Release \
             -DCMAKE_CXX_FLAGS="-pthread" && \
    make -j$(nproc)

# Create Kindle package
RUN mkdir -p kindle-package/gtkks-kindle && \
    cp build/gtkks kindle-package/gtkks-kindle/ && \
    cp -r resources kindle-package/gtkks-kindle/ && \
    echo '#!/bin/sh\ncd "$(dirname "$0")"\n./gtkks "$@"' > kindle-package/gtkks-kindle/gtkks.sh && \
    chmod +x kindle-package/gtkks-kindle/gtkks.sh && \
    echo "# GTKKS for Kindle Scribe\n\nThis is the GTKKS application for Kindle Scribe (armhf).\n\nTo run the application, execute the gtkks.sh script." > kindle-package/gtkks-kindle/README.md && \
    cd kindle-package && \
    tar -czvf gtkks-kindle-armhf.tar.gz gtkks-kindle

# Command to copy the package to the host
CMD cp kindle-package/gtkks-kindle-armhf.tar.gz /output/ 